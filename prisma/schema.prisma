generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  description String?
  isActive    Boolean   @default(true)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("categories")
}

model Product {
  id                  Int       @id @default(autoincrement())
  name                String
  slug                String    @unique
  description         String?
  price               Decimal  // Preço normal atacado
  specialPrice        Decimal  // Preço especial
  specialPriceMinQty  Int       @default(100)       // Qtd mínima para preço especial
  categoryId          Int
  imageUrl            String?
  isActive            Boolean   @default(true)
  category            Category  @relation(fields: [categoryId], references: [id])
  kitItems            KitItem[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@map("products")
}

model Kit {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  description String?
  imageUrl    String?
  totalPrice  Decimal
  discount    Decimal   @default(0)   // Desconto em R$ para mostrar economia
  colorTheme  String    @default("purple-pink")
  isActive    Boolean   @default(true)
  items       KitItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("kits")
}

model KitItem {
  id        Int     @id @default(autoincrement())
  kitId     Int
  productId Int
  quantity  Int
  kit       Kit     @relation(fields: [kitId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@unique([kitId, productId])
  @@map("kit_items")
}

model TrackingEvent {
  id          Int      @id @default(autoincrement())
  sessionId   String
  eventType   String
  phoneNumber String?
  userAgent   String?
  ipAddress   String?
  metadata    Json?
  createdAt   DateTime @default(now())

  @@index([sessionId])
  @@index([eventType])
  @@index([phoneNumber])
  @@map("tracking_events")
}

model Admin {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String
  isActive    Boolean  @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("admins")
}

model SiteConfig {
  id                Int      @id @default(autoincrement())
  avatarWhatsappUrl String   @default("/images/whatsapp-avatar.svg")
  // Webhook Configuration
  webhookUrl        String?  // URL do webhook para Evolution API
  webhookEnabled    Boolean  @default(false)
  webhookSecretKey  String?  // Chave secreta para validação
  // Configurações de comportamento do webhook
  minSessionTime    Int      @default(300) // Tempo mínimo em segundos (5min)
  sessionTimeout    Int      @default(1800) // Timeout de sessão em segundos (30min)
  highValueThreshold Decimal @default(1000) // Valor alto para priorização
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("site_config")
}

model UserJourney {
  id                    Int      @id @default(autoincrement())
  sessionId             String   @unique
  phoneNumber           String?
  email                 String?
  // Dados da sessão
  userAgent             String?
  ipAddress             String?
  location              String?
  device                String?
  trafficSource         String?
  // Timing
  sessionStart          DateTime
  sessionEnd            DateTime?
  totalTime             Int?     // em segundos
  // Comportamento
  pagesVisited          Int      @default(0)
  productsViewed        Json?    // Array de produtos visualizados
  searchQueries         Json?    // Array de buscas realizadas
  cartItems             Json?    // Itens do carrinho
  cartAbandoned         Boolean  @default(false)
  cartValue             Decimal? 
  checkoutAttempts      Int      @default(0)
  // Score e análise
  interestScore         Decimal  @default(0)
  urgencySignals        Json?    // Sinais de urgência detectados
  behaviorFlags         Json?    // Flags de comportamento
  // Status do webhook
  webhookSent           Boolean  @default(false)
  webhookSentAt         DateTime?
  webhookResponse       Json?
  // Motivo do término da sessão
  endReason             String?  // "timeout", "whatsapp_provided", "order_completed", "manual_exit"
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@index([sessionId])
  @@index([phoneNumber])
  @@index([webhookSent])
  @@map("user_journeys")
}